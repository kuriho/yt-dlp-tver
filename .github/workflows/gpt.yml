name: TVerGPT

on:
  schedule:
    - cron: '0 20 * * *'  # Customize the cron schedule as desired
  workflow_dispatch:

jobs:
  update-lib:
    runs-on: ubuntu-latest

    steps:
      - name: Clone yt-dlp Repository
        uses: actions/checkout@v2
        with:
          repository: yt-dlp/yt-dlp
          ref: master
          path: yt_dlp
          fetch-depth: 1

      - name: Copy yt_dlp Content
        run: |
          mkdir -p ${{ github.workspace }}/lib/yt_dlp
          cp -r yt_dlp/* ${{ github.workspace }}/lib/yt_dlp

      - name: Commit and Push Changes
        uses: actions/github-script@v5
        with:
          script: |
            const github = context.github;
            const repo = context.repo;
            const fs = require('fs');

            const commitMsg = 'Update lib/yt_dlp';

            fs.readdir('${{ github.workspace }}/lib/yt_dlp', (err, files) => {
              if (err) {
                console.error('Error reading directory:', err);
                return;
              }

              github.git.createTree({
                owner: repo.owner,
                repo: repo.repo,
                base_tree: context.payload.repository.default_branch,
                tree: files.map(file => ({
                  path: `lib/yt_dlp/${file}`,
                  mode: '100644',
                  type: 'blob',
                  content: fs.readFileSync(`${{ github.workspace }}/lib/yt_dlp/${file}`, 'utf8')
                }))
              }).then(tree => {
                return github.git.createCommit({
                  owner: repo.owner,
                  repo: repo.repo,
                  message: commitMsg,
                  parents: [context.payload.repository.default_branch],
                  tree: tree.data.sha
                });
              }).then(commit => {
                return github.git.updateRef({
                  owner: repo.owner,
                  repo: repo.repo,
                  ref: `heads/${context.payload.repository.default_branch}`,
                  sha: commit.data.sha
                });
              }).then(() => {
                console.log('Changes committed and pushed successfully.');
              }).catch(err => {
                console.error('Error committing and pushing changes:', err);
              });
            });
